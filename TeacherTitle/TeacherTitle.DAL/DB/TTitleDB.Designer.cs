//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("TTitleDBModel", "FK_ACTIVITY_REFERENCE_ACTPLAN", "ActPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TeacherTitle.DAL.DB.ActPlan), "ActivityAttachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeacherTitle.DAL.DB.ActivityAttachment), true)]
[assembly: EdmRelationshipAttribute("TTitleDBModel", "FK_ACTIVITY_REFERENCE_CLASSHOU", "ClassHourSum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TeacherTitle.DAL.DB.ClassHourSum), "ActivityMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeacherTitle.DAL.DB.ActivityMaterial), true)]
[assembly: EdmRelationshipAttribute("TTitleDBModel", "FK_ACTPLAN_REFERENCE_TEACHING", "TeachingActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TeacherTitle.DAL.DB.TeachingActivity), "ActPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeacherTitle.DAL.DB.ActPlan), true)]
[assembly: EdmRelationshipAttribute("TTitleDBModel", "FK_CLASSHOU_REFERENCE_ACTPLAN", "ActPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TeacherTitle.DAL.DB.ActPlan), "ClassHourSum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeacherTitle.DAL.DB.ClassHourSum), true)]
[assembly: EdmRelationshipAttribute("TTitleDBModel", "FK_CLASSHOU_REFERENCE_USER", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TeacherTitle.DAL.DB.User), "ClassHourSum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeacherTitle.DAL.DB.ClassHourSum), true)]
[assembly: EdmRelationshipAttribute("TTitleDBModel", "FK_USER_REFERENCE_INSTITUT", "Institute", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TeacherTitle.DAL.DB.Institute), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeacherTitle.DAL.DB.User), true)]
[assembly: EdmRelationshipAttribute("TTitleDBModel", "FK_USER_REFERENCE_MAJOR", "Major", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TeacherTitle.DAL.DB.Major), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeacherTitle.DAL.DB.User), true)]
[assembly: EdmRelationshipAttribute("TTitleDBModel", "FK_USER_REFERENCE_USERTYPE", "UserType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TeacherTitle.DAL.DB.UserType), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TeacherTitle.DAL.DB.User), true)]

#endregion

namespace TeacherTitle.DAL.DB
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class TTitleDBEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“TTitleDBEntities”部分中的连接字符串初始化新 TTitleDBEntities 对象。
        /// </summary>
        public TTitleDBEntities() : base("name=TTitleDBEntities", "TTitleDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 TTitleDBEntities 对象。
        /// </summary>
        public TTitleDBEntities(string connectionString) : base(connectionString, "TTitleDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 TTitleDBEntities 对象。
        /// </summary>
        public TTitleDBEntities(EntityConnection connection) : base(connection, "TTitleDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ActivityAttachment> ActivityAttachment
        {
            get
            {
                if ((_ActivityAttachment == null))
                {
                    _ActivityAttachment = base.CreateObjectSet<ActivityAttachment>("ActivityAttachment");
                }
                return _ActivityAttachment;
            }
        }
        private ObjectSet<ActivityAttachment> _ActivityAttachment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ActivityMaterial> ActivityMaterial
        {
            get
            {
                if ((_ActivityMaterial == null))
                {
                    _ActivityMaterial = base.CreateObjectSet<ActivityMaterial>("ActivityMaterial");
                }
                return _ActivityMaterial;
            }
        }
        private ObjectSet<ActivityMaterial> _ActivityMaterial;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ActPlan> ActPlan
        {
            get
            {
                if ((_ActPlan == null))
                {
                    _ActPlan = base.CreateObjectSet<ActPlan>("ActPlan");
                }
                return _ActPlan;
            }
        }
        private ObjectSet<ActPlan> _ActPlan;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ClassHourSum> ClassHourSum
        {
            get
            {
                if ((_ClassHourSum == null))
                {
                    _ClassHourSum = base.CreateObjectSet<ClassHourSum>("ClassHourSum");
                }
                return _ClassHourSum;
            }
        }
        private ObjectSet<ClassHourSum> _ClassHourSum;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Institute> Institute
        {
            get
            {
                if ((_Institute == null))
                {
                    _Institute = base.CreateObjectSet<Institute>("Institute");
                }
                return _Institute;
            }
        }
        private ObjectSet<Institute> _Institute;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Major> Major
        {
            get
            {
                if ((_Major == null))
                {
                    _Major = base.CreateObjectSet<Major>("Major");
                }
                return _Major;
            }
        }
        private ObjectSet<Major> _Major;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TeachingActivity> TeachingActivity
        {
            get
            {
                if ((_TeachingActivity == null))
                {
                    _TeachingActivity = base.CreateObjectSet<TeachingActivity>("TeachingActivity");
                }
                return _TeachingActivity;
            }
        }
        private ObjectSet<TeachingActivity> _TeachingActivity;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserType> UserType
        {
            get
            {
                if ((_UserType == null))
                {
                    _UserType = base.CreateObjectSet<UserType>("UserType");
                }
                return _UserType;
            }
        }
        private ObjectSet<UserType> _UserType;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 ActivityAttachment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToActivityAttachment(ActivityAttachment activityAttachment)
        {
            base.AddObject("ActivityAttachment", activityAttachment);
        }
    
        /// <summary>
        /// 用于向 ActivityMaterial EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToActivityMaterial(ActivityMaterial activityMaterial)
        {
            base.AddObject("ActivityMaterial", activityMaterial);
        }
    
        /// <summary>
        /// 用于向 ActPlan EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToActPlan(ActPlan actPlan)
        {
            base.AddObject("ActPlan", actPlan);
        }
    
        /// <summary>
        /// 用于向 ClassHourSum EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToClassHourSum(ClassHourSum classHourSum)
        {
            base.AddObject("ClassHourSum", classHourSum);
        }
    
        /// <summary>
        /// 用于向 Institute EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToInstitute(Institute institute)
        {
            base.AddObject("Institute", institute);
        }
    
        /// <summary>
        /// 用于向 Major EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMajor(Major major)
        {
            base.AddObject("Major", major);
        }
    
        /// <summary>
        /// 用于向 TeachingActivity EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTeachingActivity(TeachingActivity teachingActivity)
        {
            base.AddObject("TeachingActivity", teachingActivity);
        }
    
        /// <summary>
        /// 用于向 User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// 用于向 UserType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserType(UserType userType)
        {
            base.AddObject("UserType", userType);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TTitleDBModel", Name="ActivityAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityAttachment : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ActivityAttachment 对象。
        /// </summary>
        /// <param name="aA_Code">AA_Code 属性的初始值。</param>
        /// <param name="aA_Name">AA_Name 属性的初始值。</param>
        /// <param name="aA_Path">AA_Path 属性的初始值。</param>
        public static ActivityAttachment CreateActivityAttachment(global::System.Int32 aA_Code, global::System.String aA_Name, global::System.String aA_Path)
        {
            ActivityAttachment activityAttachment = new ActivityAttachment();
            activityAttachment.AA_Code = aA_Code;
            activityAttachment.AA_Name = aA_Name;
            activityAttachment.AA_Path = aA_Path;
            return activityAttachment;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AA_Code
        {
            get
            {
                return _AA_Code;
            }
            set
            {
                if (_AA_Code != value)
                {
                    OnAA_CodeChanging(value);
                    ReportPropertyChanging("AA_Code");
                    _AA_Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AA_Code");
                    OnAA_CodeChanged();
                }
            }
        }
        private global::System.Int32 _AA_Code;
        partial void OnAA_CodeChanging(global::System.Int32 value);
        partial void OnAA_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AP_Code
        {
            get
            {
                return _AP_Code;
            }
            set
            {
                OnAP_CodeChanging(value);
                ReportPropertyChanging("AP_Code");
                _AP_Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AP_Code");
                OnAP_CodeChanged();
            }
        }
        private Nullable<global::System.Int32> _AP_Code;
        partial void OnAP_CodeChanging(Nullable<global::System.Int32> value);
        partial void OnAP_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AA_Name
        {
            get
            {
                return _AA_Name;
            }
            set
            {
                OnAA_NameChanging(value);
                ReportPropertyChanging("AA_Name");
                _AA_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AA_Name");
                OnAA_NameChanged();
            }
        }
        private global::System.String _AA_Name;
        partial void OnAA_NameChanging(global::System.String value);
        partial void OnAA_NameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AA_Path
        {
            get
            {
                return _AA_Path;
            }
            set
            {
                OnAA_PathChanging(value);
                ReportPropertyChanging("AA_Path");
                _AA_Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AA_Path");
                OnAA_PathChanged();
            }
        }
        private global::System.String _AA_Path;
        partial void OnAA_PathChanging(global::System.String value);
        partial void OnAA_PathChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_ACTIVITY_REFERENCE_ACTPLAN", "ActPlan")]
        public ActPlan ActPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActPlan>("TTitleDBModel.FK_ACTIVITY_REFERENCE_ACTPLAN", "ActPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActPlan>("TTitleDBModel.FK_ACTIVITY_REFERENCE_ACTPLAN", "ActPlan").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActPlan> ActPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActPlan>("TTitleDBModel.FK_ACTIVITY_REFERENCE_ACTPLAN", "ActPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActPlan>("TTitleDBModel.FK_ACTIVITY_REFERENCE_ACTPLAN", "ActPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TTitleDBModel", Name="ActivityMaterial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityMaterial : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ActivityMaterial 对象。
        /// </summary>
        /// <param name="aM_Code">AM_Code 属性的初始值。</param>
        /// <param name="cH_Code">CH_Code 属性的初始值。</param>
        /// <param name="aM_Name">AM_Name 属性的初始值。</param>
        /// <param name="aM_SavePath">AM_SavePath 属性的初始值。</param>
        public static ActivityMaterial CreateActivityMaterial(global::System.Int32 aM_Code, global::System.Int32 cH_Code, global::System.String aM_Name, global::System.String aM_SavePath)
        {
            ActivityMaterial activityMaterial = new ActivityMaterial();
            activityMaterial.AM_Code = aM_Code;
            activityMaterial.CH_Code = cH_Code;
            activityMaterial.AM_Name = aM_Name;
            activityMaterial.AM_SavePath = aM_SavePath;
            return activityMaterial;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AM_Code
        {
            get
            {
                return _AM_Code;
            }
            set
            {
                if (_AM_Code != value)
                {
                    OnAM_CodeChanging(value);
                    ReportPropertyChanging("AM_Code");
                    _AM_Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AM_Code");
                    OnAM_CodeChanged();
                }
            }
        }
        private global::System.Int32 _AM_Code;
        partial void OnAM_CodeChanging(global::System.Int32 value);
        partial void OnAM_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CH_Code
        {
            get
            {
                return _CH_Code;
            }
            set
            {
                OnCH_CodeChanging(value);
                ReportPropertyChanging("CH_Code");
                _CH_Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CH_Code");
                OnCH_CodeChanged();
            }
        }
        private global::System.Int32 _CH_Code;
        partial void OnCH_CodeChanging(global::System.Int32 value);
        partial void OnCH_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AM_Name
        {
            get
            {
                return _AM_Name;
            }
            set
            {
                OnAM_NameChanging(value);
                ReportPropertyChanging("AM_Name");
                _AM_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AM_Name");
                OnAM_NameChanged();
            }
        }
        private global::System.String _AM_Name;
        partial void OnAM_NameChanging(global::System.String value);
        partial void OnAM_NameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AM_SavePath
        {
            get
            {
                return _AM_SavePath;
            }
            set
            {
                OnAM_SavePathChanging(value);
                ReportPropertyChanging("AM_SavePath");
                _AM_SavePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AM_SavePath");
                OnAM_SavePathChanged();
            }
        }
        private global::System.String _AM_SavePath;
        partial void OnAM_SavePathChanging(global::System.String value);
        partial void OnAM_SavePathChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_ACTIVITY_REFERENCE_CLASSHOU", "ClassHourSum")]
        public ClassHourSum ClassHourSum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassHourSum>("TTitleDBModel.FK_ACTIVITY_REFERENCE_CLASSHOU", "ClassHourSum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassHourSum>("TTitleDBModel.FK_ACTIVITY_REFERENCE_CLASSHOU", "ClassHourSum").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClassHourSum> ClassHourSumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassHourSum>("TTitleDBModel.FK_ACTIVITY_REFERENCE_CLASSHOU", "ClassHourSum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClassHourSum>("TTitleDBModel.FK_ACTIVITY_REFERENCE_CLASSHOU", "ClassHourSum", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TTitleDBModel", Name="ActPlan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActPlan : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ActPlan 对象。
        /// </summary>
        /// <param name="aP_Code">AP_Code 属性的初始值。</param>
        /// <param name="tA_Code">TA_Code 属性的初始值。</param>
        /// <param name="aP_Theme">AP_Theme 属性的初始值。</param>
        /// <param name="aP_StartTime">AP_StartTime 属性的初始值。</param>
        /// <param name="aP_EndTime">AP_EndTime 属性的初始值。</param>
        /// <param name="aP_Place">AP_Place 属性的初始值。</param>
        /// <param name="aP_Limit">AP_Limit 属性的初始值。</param>
        /// <param name="aP_Left">AP_Left 属性的初始值。</param>
        /// <param name="aP_StatusKey">AP_StatusKey 属性的初始值。</param>
        /// <param name="aP_StatusValue">AP_StatusValue 属性的初始值。</param>
        public static ActPlan CreateActPlan(global::System.Int32 aP_Code, global::System.Int32 tA_Code, global::System.String aP_Theme, global::System.String aP_StartTime, global::System.String aP_EndTime, global::System.String aP_Place, global::System.Int32 aP_Limit, global::System.Int32 aP_Left, global::System.Int32 aP_StatusKey, global::System.String aP_StatusValue)
        {
            ActPlan actPlan = new ActPlan();
            actPlan.AP_Code = aP_Code;
            actPlan.TA_Code = tA_Code;
            actPlan.AP_Theme = aP_Theme;
            actPlan.AP_StartTime = aP_StartTime;
            actPlan.AP_EndTime = aP_EndTime;
            actPlan.AP_Place = aP_Place;
            actPlan.AP_Limit = aP_Limit;
            actPlan.AP_Left = aP_Left;
            actPlan.AP_StatusKey = aP_StatusKey;
            actPlan.AP_StatusValue = aP_StatusValue;
            return actPlan;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AP_Code
        {
            get
            {
                return _AP_Code;
            }
            set
            {
                if (_AP_Code != value)
                {
                    OnAP_CodeChanging(value);
                    ReportPropertyChanging("AP_Code");
                    _AP_Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AP_Code");
                    OnAP_CodeChanged();
                }
            }
        }
        private global::System.Int32 _AP_Code;
        partial void OnAP_CodeChanging(global::System.Int32 value);
        partial void OnAP_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TA_Code
        {
            get
            {
                return _TA_Code;
            }
            set
            {
                OnTA_CodeChanging(value);
                ReportPropertyChanging("TA_Code");
                _TA_Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TA_Code");
                OnTA_CodeChanged();
            }
        }
        private global::System.Int32 _TA_Code;
        partial void OnTA_CodeChanging(global::System.Int32 value);
        partial void OnTA_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AP_Theme
        {
            get
            {
                return _AP_Theme;
            }
            set
            {
                OnAP_ThemeChanging(value);
                ReportPropertyChanging("AP_Theme");
                _AP_Theme = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AP_Theme");
                OnAP_ThemeChanged();
            }
        }
        private global::System.String _AP_Theme;
        partial void OnAP_ThemeChanging(global::System.String value);
        partial void OnAP_ThemeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AP_StartTime
        {
            get
            {
                return _AP_StartTime;
            }
            set
            {
                OnAP_StartTimeChanging(value);
                ReportPropertyChanging("AP_StartTime");
                _AP_StartTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AP_StartTime");
                OnAP_StartTimeChanged();
            }
        }
        private global::System.String _AP_StartTime;
        partial void OnAP_StartTimeChanging(global::System.String value);
        partial void OnAP_StartTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AP_EndTime
        {
            get
            {
                return _AP_EndTime;
            }
            set
            {
                OnAP_EndTimeChanging(value);
                ReportPropertyChanging("AP_EndTime");
                _AP_EndTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AP_EndTime");
                OnAP_EndTimeChanged();
            }
        }
        private global::System.String _AP_EndTime;
        partial void OnAP_EndTimeChanging(global::System.String value);
        partial void OnAP_EndTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AP_Place
        {
            get
            {
                return _AP_Place;
            }
            set
            {
                OnAP_PlaceChanging(value);
                ReportPropertyChanging("AP_Place");
                _AP_Place = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AP_Place");
                OnAP_PlaceChanged();
            }
        }
        private global::System.String _AP_Place;
        partial void OnAP_PlaceChanging(global::System.String value);
        partial void OnAP_PlaceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AP_Limit
        {
            get
            {
                return _AP_Limit;
            }
            set
            {
                OnAP_LimitChanging(value);
                ReportPropertyChanging("AP_Limit");
                _AP_Limit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AP_Limit");
                OnAP_LimitChanged();
            }
        }
        private global::System.Int32 _AP_Limit;
        partial void OnAP_LimitChanging(global::System.Int32 value);
        partial void OnAP_LimitChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AP_Left
        {
            get
            {
                return _AP_Left;
            }
            set
            {
                OnAP_LeftChanging(value);
                ReportPropertyChanging("AP_Left");
                _AP_Left = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AP_Left");
                OnAP_LeftChanged();
            }
        }
        private global::System.Int32 _AP_Left;
        partial void OnAP_LeftChanging(global::System.Int32 value);
        partial void OnAP_LeftChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AP_Candidate
        {
            get
            {
                return _AP_Candidate;
            }
            set
            {
                OnAP_CandidateChanging(value);
                ReportPropertyChanging("AP_Candidate");
                _AP_Candidate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AP_Candidate");
                OnAP_CandidateChanged();
            }
        }
        private Nullable<global::System.Int32> _AP_Candidate;
        partial void OnAP_CandidateChanging(Nullable<global::System.Int32> value);
        partial void OnAP_CandidateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AP_StatusKey
        {
            get
            {
                return _AP_StatusKey;
            }
            set
            {
                OnAP_StatusKeyChanging(value);
                ReportPropertyChanging("AP_StatusKey");
                _AP_StatusKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AP_StatusKey");
                OnAP_StatusKeyChanged();
            }
        }
        private global::System.Int32 _AP_StatusKey;
        partial void OnAP_StatusKeyChanging(global::System.Int32 value);
        partial void OnAP_StatusKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AP_StatusValue
        {
            get
            {
                return _AP_StatusValue;
            }
            set
            {
                OnAP_StatusValueChanging(value);
                ReportPropertyChanging("AP_StatusValue");
                _AP_StatusValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AP_StatusValue");
                OnAP_StatusValueChanged();
            }
        }
        private global::System.String _AP_StatusValue;
        partial void OnAP_StatusValueChanging(global::System.String value);
        partial void OnAP_StatusValueChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_ACTIVITY_REFERENCE_ACTPLAN", "ActivityAttachment")]
        public EntityCollection<ActivityAttachment> ActivityAttachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityAttachment>("TTitleDBModel.FK_ACTIVITY_REFERENCE_ACTPLAN", "ActivityAttachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityAttachment>("TTitleDBModel.FK_ACTIVITY_REFERENCE_ACTPLAN", "ActivityAttachment", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_ACTPLAN_REFERENCE_TEACHING", "TeachingActivity")]
        public TeachingActivity TeachingActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeachingActivity>("TTitleDBModel.FK_ACTPLAN_REFERENCE_TEACHING", "TeachingActivity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeachingActivity>("TTitleDBModel.FK_ACTPLAN_REFERENCE_TEACHING", "TeachingActivity").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TeachingActivity> TeachingActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TeachingActivity>("TTitleDBModel.FK_ACTPLAN_REFERENCE_TEACHING", "TeachingActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TeachingActivity>("TTitleDBModel.FK_ACTPLAN_REFERENCE_TEACHING", "TeachingActivity", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_CLASSHOU_REFERENCE_ACTPLAN", "ClassHourSum")]
        public EntityCollection<ClassHourSum> ClassHourSum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassHourSum>("TTitleDBModel.FK_CLASSHOU_REFERENCE_ACTPLAN", "ClassHourSum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassHourSum>("TTitleDBModel.FK_CLASSHOU_REFERENCE_ACTPLAN", "ClassHourSum", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TTitleDBModel", Name="ClassHourSum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClassHourSum : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ClassHourSum 对象。
        /// </summary>
        /// <param name="cH_Code">CH_Code 属性的初始值。</param>
        /// <param name="u_Code">U_Code 属性的初始值。</param>
        /// <param name="aP_Code">AP_Code 属性的初始值。</param>
        /// <param name="cH_GetHour">CH_GetHour 属性的初始值。</param>
        public static ClassHourSum CreateClassHourSum(global::System.Int32 cH_Code, global::System.Int32 u_Code, global::System.Int32 aP_Code, global::System.Int32 cH_GetHour)
        {
            ClassHourSum classHourSum = new ClassHourSum();
            classHourSum.CH_Code = cH_Code;
            classHourSum.U_Code = u_Code;
            classHourSum.AP_Code = aP_Code;
            classHourSum.CH_GetHour = cH_GetHour;
            return classHourSum;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CH_Code
        {
            get
            {
                return _CH_Code;
            }
            set
            {
                if (_CH_Code != value)
                {
                    OnCH_CodeChanging(value);
                    ReportPropertyChanging("CH_Code");
                    _CH_Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CH_Code");
                    OnCH_CodeChanged();
                }
            }
        }
        private global::System.Int32 _CH_Code;
        partial void OnCH_CodeChanging(global::System.Int32 value);
        partial void OnCH_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 U_Code
        {
            get
            {
                return _U_Code;
            }
            set
            {
                OnU_CodeChanging(value);
                ReportPropertyChanging("U_Code");
                _U_Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("U_Code");
                OnU_CodeChanged();
            }
        }
        private global::System.Int32 _U_Code;
        partial void OnU_CodeChanging(global::System.Int32 value);
        partial void OnU_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AP_Code
        {
            get
            {
                return _AP_Code;
            }
            set
            {
                OnAP_CodeChanging(value);
                ReportPropertyChanging("AP_Code");
                _AP_Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AP_Code");
                OnAP_CodeChanged();
            }
        }
        private global::System.Int32 _AP_Code;
        partial void OnAP_CodeChanging(global::System.Int32 value);
        partial void OnAP_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CH_GetTime
        {
            get
            {
                return _CH_GetTime;
            }
            set
            {
                OnCH_GetTimeChanging(value);
                ReportPropertyChanging("CH_GetTime");
                _CH_GetTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CH_GetTime");
                OnCH_GetTimeChanged();
            }
        }
        private global::System.String _CH_GetTime;
        partial void OnCH_GetTimeChanging(global::System.String value);
        partial void OnCH_GetTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CH_GetHour
        {
            get
            {
                return _CH_GetHour;
            }
            set
            {
                OnCH_GetHourChanging(value);
                ReportPropertyChanging("CH_GetHour");
                _CH_GetHour = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CH_GetHour");
                OnCH_GetHourChanged();
            }
        }
        private global::System.Int32 _CH_GetHour;
        partial void OnCH_GetHourChanging(global::System.Int32 value);
        partial void OnCH_GetHourChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CH_Remark
        {
            get
            {
                return _CH_Remark;
            }
            set
            {
                OnCH_RemarkChanging(value);
                ReportPropertyChanging("CH_Remark");
                _CH_Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CH_Remark");
                OnCH_RemarkChanged();
            }
        }
        private global::System.String _CH_Remark;
        partial void OnCH_RemarkChanging(global::System.String value);
        partial void OnCH_RemarkChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_ACTIVITY_REFERENCE_CLASSHOU", "ActivityMaterial")]
        public EntityCollection<ActivityMaterial> ActivityMaterial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityMaterial>("TTitleDBModel.FK_ACTIVITY_REFERENCE_CLASSHOU", "ActivityMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityMaterial>("TTitleDBModel.FK_ACTIVITY_REFERENCE_CLASSHOU", "ActivityMaterial", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_CLASSHOU_REFERENCE_ACTPLAN", "ActPlan")]
        public ActPlan ActPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActPlan>("TTitleDBModel.FK_CLASSHOU_REFERENCE_ACTPLAN", "ActPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActPlan>("TTitleDBModel.FK_CLASSHOU_REFERENCE_ACTPLAN", "ActPlan").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActPlan> ActPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActPlan>("TTitleDBModel.FK_CLASSHOU_REFERENCE_ACTPLAN", "ActPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActPlan>("TTitleDBModel.FK_CLASSHOU_REFERENCE_ACTPLAN", "ActPlan", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_CLASSHOU_REFERENCE_USER", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TTitleDBModel.FK_CLASSHOU_REFERENCE_USER", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TTitleDBModel.FK_CLASSHOU_REFERENCE_USER", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TTitleDBModel.FK_CLASSHOU_REFERENCE_USER", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TTitleDBModel.FK_CLASSHOU_REFERENCE_USER", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TTitleDBModel", Name="Institute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Institute : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Institute 对象。
        /// </summary>
        /// <param name="i_Code">I_Code 属性的初始值。</param>
        /// <param name="i_Name">I_Name 属性的初始值。</param>
        /// <param name="i_IsValid">I_IsValid 属性的初始值。</param>
        public static Institute CreateInstitute(global::System.Int32 i_Code, global::System.String i_Name, global::System.Int32 i_IsValid)
        {
            Institute institute = new Institute();
            institute.I_Code = i_Code;
            institute.I_Name = i_Name;
            institute.I_IsValid = i_IsValid;
            return institute;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 I_Code
        {
            get
            {
                return _I_Code;
            }
            set
            {
                if (_I_Code != value)
                {
                    OnI_CodeChanging(value);
                    ReportPropertyChanging("I_Code");
                    _I_Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("I_Code");
                    OnI_CodeChanged();
                }
            }
        }
        private global::System.Int32 _I_Code;
        partial void OnI_CodeChanging(global::System.Int32 value);
        partial void OnI_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String I_Name
        {
            get
            {
                return _I_Name;
            }
            set
            {
                OnI_NameChanging(value);
                ReportPropertyChanging("I_Name");
                _I_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("I_Name");
                OnI_NameChanged();
            }
        }
        private global::System.String _I_Name;
        partial void OnI_NameChanging(global::System.String value);
        partial void OnI_NameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 I_IsValid
        {
            get
            {
                return _I_IsValid;
            }
            set
            {
                OnI_IsValidChanging(value);
                ReportPropertyChanging("I_IsValid");
                _I_IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("I_IsValid");
                OnI_IsValidChanged();
            }
        }
        private global::System.Int32 _I_IsValid;
        partial void OnI_IsValidChanging(global::System.Int32 value);
        partial void OnI_IsValidChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_USER_REFERENCE_INSTITUT", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TTitleDBModel.FK_USER_REFERENCE_INSTITUT", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TTitleDBModel.FK_USER_REFERENCE_INSTITUT", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TTitleDBModel", Name="Major")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Major : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Major 对象。
        /// </summary>
        /// <param name="m_Code">M_Code 属性的初始值。</param>
        /// <param name="m_Name">M_Name 属性的初始值。</param>
        /// <param name="m_IsValid">M_IsValid 属性的初始值。</param>
        public static Major CreateMajor(global::System.Int32 m_Code, global::System.String m_Name, global::System.Int32 m_IsValid)
        {
            Major major = new Major();
            major.M_Code = m_Code;
            major.M_Name = m_Name;
            major.M_IsValid = m_IsValid;
            return major;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 M_Code
        {
            get
            {
                return _M_Code;
            }
            set
            {
                if (_M_Code != value)
                {
                    OnM_CodeChanging(value);
                    ReportPropertyChanging("M_Code");
                    _M_Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("M_Code");
                    OnM_CodeChanged();
                }
            }
        }
        private global::System.Int32 _M_Code;
        partial void OnM_CodeChanging(global::System.Int32 value);
        partial void OnM_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String M_Name
        {
            get
            {
                return _M_Name;
            }
            set
            {
                OnM_NameChanging(value);
                ReportPropertyChanging("M_Name");
                _M_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("M_Name");
                OnM_NameChanged();
            }
        }
        private global::System.String _M_Name;
        partial void OnM_NameChanging(global::System.String value);
        partial void OnM_NameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 M_IsValid
        {
            get
            {
                return _M_IsValid;
            }
            set
            {
                OnM_IsValidChanging(value);
                ReportPropertyChanging("M_IsValid");
                _M_IsValid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("M_IsValid");
                OnM_IsValidChanged();
            }
        }
        private global::System.Int32 _M_IsValid;
        partial void OnM_IsValidChanging(global::System.Int32 value);
        partial void OnM_IsValidChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_USER_REFERENCE_MAJOR", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TTitleDBModel.FK_USER_REFERENCE_MAJOR", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TTitleDBModel.FK_USER_REFERENCE_MAJOR", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TTitleDBModel", Name="TeachingActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeachingActivity : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TeachingActivity 对象。
        /// </summary>
        /// <param name="tA_Code">TA_Code 属性的初始值。</param>
        /// <param name="tA_Form">TA_Form 属性的初始值。</param>
        /// <param name="tA_Way">TA_Way 属性的初始值。</param>
        /// <param name="tA_Material">TA_Material 属性的初始值。</param>
        /// <param name="tA_ClassHour">TA_ClassHour 属性的初始值。</param>
        /// <param name="tA_PlaceKey">TA_PlaceKey 属性的初始值。</param>
        /// <param name="tA_PlaceValue">TA_PlaceValue 属性的初始值。</param>
        public static TeachingActivity CreateTeachingActivity(global::System.Int32 tA_Code, global::System.String tA_Form, global::System.String tA_Way, global::System.String tA_Material, global::System.String tA_ClassHour, global::System.Int32 tA_PlaceKey, global::System.String tA_PlaceValue)
        {
            TeachingActivity teachingActivity = new TeachingActivity();
            teachingActivity.TA_Code = tA_Code;
            teachingActivity.TA_Form = tA_Form;
            teachingActivity.TA_Way = tA_Way;
            teachingActivity.TA_Material = tA_Material;
            teachingActivity.TA_ClassHour = tA_ClassHour;
            teachingActivity.TA_PlaceKey = tA_PlaceKey;
            teachingActivity.TA_PlaceValue = tA_PlaceValue;
            return teachingActivity;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TA_Code
        {
            get
            {
                return _TA_Code;
            }
            set
            {
                if (_TA_Code != value)
                {
                    OnTA_CodeChanging(value);
                    ReportPropertyChanging("TA_Code");
                    _TA_Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TA_Code");
                    OnTA_CodeChanged();
                }
            }
        }
        private global::System.Int32 _TA_Code;
        partial void OnTA_CodeChanging(global::System.Int32 value);
        partial void OnTA_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TA_Form
        {
            get
            {
                return _TA_Form;
            }
            set
            {
                OnTA_FormChanging(value);
                ReportPropertyChanging("TA_Form");
                _TA_Form = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TA_Form");
                OnTA_FormChanged();
            }
        }
        private global::System.String _TA_Form;
        partial void OnTA_FormChanging(global::System.String value);
        partial void OnTA_FormChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TA_Way
        {
            get
            {
                return _TA_Way;
            }
            set
            {
                OnTA_WayChanging(value);
                ReportPropertyChanging("TA_Way");
                _TA_Way = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TA_Way");
                OnTA_WayChanged();
            }
        }
        private global::System.String _TA_Way;
        partial void OnTA_WayChanging(global::System.String value);
        partial void OnTA_WayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TA_Material
        {
            get
            {
                return _TA_Material;
            }
            set
            {
                OnTA_MaterialChanging(value);
                ReportPropertyChanging("TA_Material");
                _TA_Material = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TA_Material");
                OnTA_MaterialChanged();
            }
        }
        private global::System.String _TA_Material;
        partial void OnTA_MaterialChanging(global::System.String value);
        partial void OnTA_MaterialChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TA_ClassHour
        {
            get
            {
                return _TA_ClassHour;
            }
            set
            {
                OnTA_ClassHourChanging(value);
                ReportPropertyChanging("TA_ClassHour");
                _TA_ClassHour = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TA_ClassHour");
                OnTA_ClassHourChanged();
            }
        }
        private global::System.String _TA_ClassHour;
        partial void OnTA_ClassHourChanging(global::System.String value);
        partial void OnTA_ClassHourChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TA_PlaceKey
        {
            get
            {
                return _TA_PlaceKey;
            }
            set
            {
                OnTA_PlaceKeyChanging(value);
                ReportPropertyChanging("TA_PlaceKey");
                _TA_PlaceKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TA_PlaceKey");
                OnTA_PlaceKeyChanged();
            }
        }
        private global::System.Int32 _TA_PlaceKey;
        partial void OnTA_PlaceKeyChanging(global::System.Int32 value);
        partial void OnTA_PlaceKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TA_PlaceValue
        {
            get
            {
                return _TA_PlaceValue;
            }
            set
            {
                OnTA_PlaceValueChanging(value);
                ReportPropertyChanging("TA_PlaceValue");
                _TA_PlaceValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TA_PlaceValue");
                OnTA_PlaceValueChanged();
            }
        }
        private global::System.String _TA_PlaceValue;
        partial void OnTA_PlaceValueChanging(global::System.String value);
        partial void OnTA_PlaceValueChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_ACTPLAN_REFERENCE_TEACHING", "ActPlan")]
        public EntityCollection<ActPlan> ActPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActPlan>("TTitleDBModel.FK_ACTPLAN_REFERENCE_TEACHING", "ActPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActPlan>("TTitleDBModel.FK_ACTPLAN_REFERENCE_TEACHING", "ActPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TTitleDBModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="u_Code">U_Code 属性的初始值。</param>
        /// <param name="u_Account">U_Account 属性的初始值。</param>
        /// <param name="u_PassWord">U_PassWord 属性的初始值。</param>
        /// <param name="u_Name">U_Name 属性的初始值。</param>
        /// <param name="i_Code">I_Code 属性的初始值。</param>
        /// <param name="m_Code">M_Code 属性的初始值。</param>
        /// <param name="uT_Code">UT_Code 属性的初始值。</param>
        /// <param name="u_Degree">U_Degree 属性的初始值。</param>
        /// <param name="u_Title">U_Title 属性的初始值。</param>
        /// <param name="u_Mail">U_Mail 属性的初始值。</param>
        /// <param name="u_Phone">U_Phone 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 u_Code, global::System.String u_Account, global::System.String u_PassWord, global::System.String u_Name, global::System.Int32 i_Code, global::System.Int32 m_Code, global::System.Int32 uT_Code, global::System.String u_Degree, global::System.String u_Title, global::System.String u_Mail, global::System.String u_Phone)
        {
            User user = new User();
            user.U_Code = u_Code;
            user.U_Account = u_Account;
            user.U_PassWord = u_PassWord;
            user.U_Name = u_Name;
            user.I_Code = i_Code;
            user.M_Code = m_Code;
            user.UT_Code = uT_Code;
            user.U_Degree = u_Degree;
            user.U_Title = u_Title;
            user.U_Mail = u_Mail;
            user.U_Phone = u_Phone;
            return user;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 U_Code
        {
            get
            {
                return _U_Code;
            }
            set
            {
                if (_U_Code != value)
                {
                    OnU_CodeChanging(value);
                    ReportPropertyChanging("U_Code");
                    _U_Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("U_Code");
                    OnU_CodeChanged();
                }
            }
        }
        private global::System.Int32 _U_Code;
        partial void OnU_CodeChanging(global::System.Int32 value);
        partial void OnU_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String U_Account
        {
            get
            {
                return _U_Account;
            }
            set
            {
                OnU_AccountChanging(value);
                ReportPropertyChanging("U_Account");
                _U_Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("U_Account");
                OnU_AccountChanged();
            }
        }
        private global::System.String _U_Account;
        partial void OnU_AccountChanging(global::System.String value);
        partial void OnU_AccountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String U_PassWord
        {
            get
            {
                return _U_PassWord;
            }
            set
            {
                OnU_PassWordChanging(value);
                ReportPropertyChanging("U_PassWord");
                _U_PassWord = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("U_PassWord");
                OnU_PassWordChanged();
            }
        }
        private global::System.String _U_PassWord;
        partial void OnU_PassWordChanging(global::System.String value);
        partial void OnU_PassWordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String U_Name
        {
            get
            {
                return _U_Name;
            }
            set
            {
                OnU_NameChanging(value);
                ReportPropertyChanging("U_Name");
                _U_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("U_Name");
                OnU_NameChanged();
            }
        }
        private global::System.String _U_Name;
        partial void OnU_NameChanging(global::System.String value);
        partial void OnU_NameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 I_Code
        {
            get
            {
                return _I_Code;
            }
            set
            {
                OnI_CodeChanging(value);
                ReportPropertyChanging("I_Code");
                _I_Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("I_Code");
                OnI_CodeChanged();
            }
        }
        private global::System.Int32 _I_Code;
        partial void OnI_CodeChanging(global::System.Int32 value);
        partial void OnI_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 M_Code
        {
            get
            {
                return _M_Code;
            }
            set
            {
                OnM_CodeChanging(value);
                ReportPropertyChanging("M_Code");
                _M_Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("M_Code");
                OnM_CodeChanged();
            }
        }
        private global::System.Int32 _M_Code;
        partial void OnM_CodeChanging(global::System.Int32 value);
        partial void OnM_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UT_Code
        {
            get
            {
                return _UT_Code;
            }
            set
            {
                OnUT_CodeChanging(value);
                ReportPropertyChanging("UT_Code");
                _UT_Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UT_Code");
                OnUT_CodeChanged();
            }
        }
        private global::System.Int32 _UT_Code;
        partial void OnUT_CodeChanging(global::System.Int32 value);
        partial void OnUT_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String U_Degree
        {
            get
            {
                return _U_Degree;
            }
            set
            {
                OnU_DegreeChanging(value);
                ReportPropertyChanging("U_Degree");
                _U_Degree = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("U_Degree");
                OnU_DegreeChanged();
            }
        }
        private global::System.String _U_Degree;
        partial void OnU_DegreeChanging(global::System.String value);
        partial void OnU_DegreeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String U_Title
        {
            get
            {
                return _U_Title;
            }
            set
            {
                OnU_TitleChanging(value);
                ReportPropertyChanging("U_Title");
                _U_Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("U_Title");
                OnU_TitleChanged();
            }
        }
        private global::System.String _U_Title;
        partial void OnU_TitleChanging(global::System.String value);
        partial void OnU_TitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String U_Mail
        {
            get
            {
                return _U_Mail;
            }
            set
            {
                OnU_MailChanging(value);
                ReportPropertyChanging("U_Mail");
                _U_Mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("U_Mail");
                OnU_MailChanged();
            }
        }
        private global::System.String _U_Mail;
        partial void OnU_MailChanging(global::System.String value);
        partial void OnU_MailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String U_Phone
        {
            get
            {
                return _U_Phone;
            }
            set
            {
                OnU_PhoneChanging(value);
                ReportPropertyChanging("U_Phone");
                _U_Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("U_Phone");
                OnU_PhoneChanged();
            }
        }
        private global::System.String _U_Phone;
        partial void OnU_PhoneChanging(global::System.String value);
        partial void OnU_PhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String U_Remark
        {
            get
            {
                return _U_Remark;
            }
            set
            {
                OnU_RemarkChanging(value);
                ReportPropertyChanging("U_Remark");
                _U_Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("U_Remark");
                OnU_RemarkChanged();
            }
        }
        private global::System.String _U_Remark;
        partial void OnU_RemarkChanging(global::System.String value);
        partial void OnU_RemarkChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_CLASSHOU_REFERENCE_USER", "ClassHourSum")]
        public EntityCollection<ClassHourSum> ClassHourSum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassHourSum>("TTitleDBModel.FK_CLASSHOU_REFERENCE_USER", "ClassHourSum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassHourSum>("TTitleDBModel.FK_CLASSHOU_REFERENCE_USER", "ClassHourSum", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_USER_REFERENCE_INSTITUT", "Institute")]
        public Institute Institute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("TTitleDBModel.FK_USER_REFERENCE_INSTITUT", "Institute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("TTitleDBModel.FK_USER_REFERENCE_INSTITUT", "Institute").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institute> InstituteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("TTitleDBModel.FK_USER_REFERENCE_INSTITUT", "Institute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institute>("TTitleDBModel.FK_USER_REFERENCE_INSTITUT", "Institute", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_USER_REFERENCE_MAJOR", "Major")]
        public Major Major
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Major>("TTitleDBModel.FK_USER_REFERENCE_MAJOR", "Major").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Major>("TTitleDBModel.FK_USER_REFERENCE_MAJOR", "Major").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Major> MajorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Major>("TTitleDBModel.FK_USER_REFERENCE_MAJOR", "Major");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Major>("TTitleDBModel.FK_USER_REFERENCE_MAJOR", "Major", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_USER_REFERENCE_USERTYPE", "UserType")]
        public UserType UserType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("TTitleDBModel.FK_USER_REFERENCE_USERTYPE", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("TTitleDBModel.FK_USER_REFERENCE_USERTYPE", "UserType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> UserTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("TTitleDBModel.FK_USER_REFERENCE_USERTYPE", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserType>("TTitleDBModel.FK_USER_REFERENCE_USERTYPE", "UserType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TTitleDBModel", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserType 对象。
        /// </summary>
        /// <param name="uT_Code">UT_Code 属性的初始值。</param>
        /// <param name="uTType">UTType 属性的初始值。</param>
        public static UserType CreateUserType(global::System.Int32 uT_Code, global::System.String uTType)
        {
            UserType userType = new UserType();
            userType.UT_Code = uT_Code;
            userType.UTType = uTType;
            return userType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UT_Code
        {
            get
            {
                return _UT_Code;
            }
            set
            {
                if (_UT_Code != value)
                {
                    OnUT_CodeChanging(value);
                    ReportPropertyChanging("UT_Code");
                    _UT_Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UT_Code");
                    OnUT_CodeChanged();
                }
            }
        }
        private global::System.Int32 _UT_Code;
        partial void OnUT_CodeChanging(global::System.Int32 value);
        partial void OnUT_CodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UTType
        {
            get
            {
                return _UTType;
            }
            set
            {
                OnUTTypeChanging(value);
                ReportPropertyChanging("UTType");
                _UTType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UTType");
                OnUTTypeChanged();
            }
        }
        private global::System.String _UTType;
        partial void OnUTTypeChanging(global::System.String value);
        partial void OnUTTypeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TTitleDBModel", "FK_USER_REFERENCE_USERTYPE", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TTitleDBModel.FK_USER_REFERENCE_USERTYPE", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TTitleDBModel.FK_USER_REFERENCE_USERTYPE", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
